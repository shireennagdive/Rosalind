class PatternMatching:
    longest_pp = [0]
    pattern, text = "", ""

    def __init__(self, text, pattern):
        self.text = text
        self.pattern = pattern

    def pre_process_pattern(self):
            pat, i = 0, 1
            pattern_len = len(self.pattern)
            while i in range(1, pattern_len):
                if self.pattern[pat] == self.pattern[i]:
                    i += 1
                    pat += 1
                    self.longest_pp.append(pat)
                else:
                    if pat != 0:
                        pat = self.longest_pp.__getitem__(pat-1)
                    else:
                        self.longest_pp.append(pat)
                        i += 1
            return self.longest_pp

    def search_pattern_in_text(self):
        i, j = 0, 0
        matching_indices = []
        len_text, len_pattern = len(self.text), len(self.pattern)
        while i in range(0, len_text):
            if j < len_pattern and self.text[i] == self.pattern[j]:
                i += 1
                j += 1
            else:
                if j != 0:
                    if j == len_pattern:
                        matching_indices.append(i - len_pattern)
                    j = self.longest_pp[j - 1]
                else:
                    i += 1
        if j == len_pattern:
            matching_indices.append(i - len_pattern)
        return matching_indices


text = "TACCTTGCGGTACCTTGGTATACCTTGTACCTTGCTACCTTGATTACCTTGTACCTTGTACCTTGTTTACCTTGGCTACCTTGTACCTTGATTACCTTGATACCTTGTACCTTGGTACCTTGGAGTACCTTGTTTGGAAGTTACCTTGCTACCTTGAATACCTTGCTGCGAGCCTACCTTGTGGGTACCTTGAATACCTTGGCCGTTACCTTGTACCTTGTGATACCTTGTTACCTTGAATCAATTCAGCAACTACCTTGTACTACCTTGTACCTTGTTTTACCTTGCGTACCTTGTACCTTGCGCGTACCTTGGGTACCTTGTACCTTGAATACCTTGTGCACATACCTACCTTGTTACCTTGATTGTATACCTTGCCACATCAAACATAGGTTACCTTGTACCTTGTGATGTGGATACCTTGTGAACACATACCTTGATGATACCTTGATGGTACCTTGTACCTTGTTTACCTTGTTACCTTGGCCGTACCTTGATACCTTGGTCTCACTTACCTTGGCTACCTTGAGTACCTTGGCTACCTTGCTGTGTACCTTGCTACCTTGTCTACCTTGTTACGTACCTTGCACTAATGTACCTTGCTCACTACCTTGTACCTTGTTACCTTGAATACCTTGCGGTACCTTGCCTTACCTTGAAATACCTTGTGGCTACCTTGATCCGCGTGGTCAGTAATACCTTGATACCTTGATACCTTGAGTAGGTACCTTGTACCTTGTCACTTACCTTGATACCTTGCAATACCTTGAGTACCTTGCCATACCTTGTACCTTGATACCTTGGTACCTTGATCGAATTACCTTGCTACCTTGGTCTAAACAGGAGAGGGTACCTTGTACCTTGTACCTTGATTACCTTGGGATCGATACCTTGACTACCTTGCCTACCTTGTATACCTTGAAATGGGTACCTTGATATAGGCGTTAACTCTTGTGATTACCTTGTACCTTGTTATTTTTTTACCTTGTACCTTGGTACCTTGACTACCTTGCGTCCTACCTTGTACCTTGTCTTACCTTGCATACCTTGTTACCTTGAACCTACCTTGGATCTACCTTGGCTCCACGAGTACTACCTTGTCGCAAGTACCTTGGCCTTACCTTGTAGACTACCTTGGATACCTTGTACCTTGAGTACCTTGTACCTTGCACTACCTTGAATACCTTGAATACCTTGCAGATACCTTGTACCTTGGTGTCAATACCTTGGTTCATTACCTTGCTGAAATACCTTGGTACCTTGCCTACCTTGTGGACCATACCTTGGATCTACCTTGTACCTTGCCACTACCTTGTCGTACCTTGTAACGTGGACTACCTTGTATACCTTGGCTACCTTGATACCTTGAGTACCTTGATATTACCTTGCAATACCTTGCAGTACCTTGGTACCTTGATTACCTTGCGTACCTTGCCACTACCTTGGCTAATACCTTGGGACGCCTACCTTGTACCTTGAAATATACCTTGTTTACCTTGAATTACCTTGCTACCTTGGCTACCTTGTGCGTACCTTGATGTACCTTGCTCGACCCCTACCTTGCAGAAGGGTACCTTGCCTACCTTGAGGTTGGTAGTTGTACCTTGGTACGATACCTTGCCCTACCTTGCGATACCTTGCTACCTTGTACCTTGATACCTTGTACCTTGCATTTACCTTGCCAATTCGGTACCTTGGGGTATACCTTGAGGGATACCTTGTACCTTGTACCTTGGACTACCTTGGGCCTATCCGGTACCTTGCGCTACCTTGCTCAGAGGTACCTTGGACGAACTACCTTGTACCTTGCTACCTTGTACTACCTTGATACCTTGATACCTTGATACCTTGTAGACATCTCTACCTTGGCTACCTTGTACCTTGCTTACCTTGTACCTTGCTACCTTGTACCTTGCTACCTTGATTCCGCAAATACCTTGCCGGATACCTTGTACCTTGCTACCTTGACGTACCTTGCGGTCCCAGTGTACCTTGTACCTTGTACCTTGTACCTTGCTTACCTTGGCTCTGGCTACTATACCTTGACGTACCTTGACTAATACCTTGCGGTCGCATCTACCTTGACTACCTTGTTGTGATACCTTGTTACCTTGTGCTGAGTTACCTTGCAATACCTTGTTACCTTGCCTACCTTGGTACCTTGTACCTTGAGTACCTTGTACCTTGCCGACTACCTTGGCTACCTTGTGTACCTTGCACTACCTTGTACCTTGGCTACCTTGTACCTTGTATTACCTTGTACCTTGTAATTACCTTGTCTACCTTGTTACCTTGTACCTTGAACGGTCGACCTCTACCTTGAGGTACCTTGTCCGGTACCTTGCTACCTTGGTACCTTGTTCGGACGTACCTTGAACTGTACCTTGGCCGTACCTTGTGTACCTTGTACCTTGCTACCTTGTCTACCTTGCTACCTTGGAGCTATTCGGCCTACCTTGATTACCTTGTATACCTTGAGAGGTTACCTTGACTACCTTGATACCTTGCTCTTTACCTTGCGTACCTTGTAATACCTTGTTACCTTGTACCTTGAGTGGAGGTACCTTGTACCTTGTCTACCTTGACGGTTACCTTGACGTACCTTGCCTACCTTGCCAATACCTTGACTACCTTGTACCTTGATACCTTGAGGTACCTTGTAGTACCTTGTTACCTTGAAGGATACCTTGCGGACCATACCTTGAAGATGGGTTACCTTGCCTAAATTACCTTGCTACCTTGCAGTACCTTGTGGTGTGTGTTTACCTTGTACCTTGTACCTTGCTACCTTGTACCTTGCACGTTACCTTGATCTCGACTACCTTGCTACCTTGTACCTTGATACCTTGACTACCTTGTACCTTGTACCTTGATACCTTGAGATACCTTGTGCTCTAAATAGTCTACCTTGAAATACCTTGACCCTTCGACTTACCTTGATACCTTGGGTACCTTGCGAAGTACCTTGCTCGGCTTACCTTGCCGTGACCAATACCTTGGACCGTACCTTGCGTTGATTACCTTGTTCTACCTTGTACCTTGTTCTACCTTGTACCTTGGCAGAATACCTTGTACCTTGACCAATACCTTGCCATTACCTTGATACCTTGGTACCTTGACTATTACCTTGGCACTACCTTGTCACGTACCTTGTAGGTACCTTGTACCTTGACATACCTTGAGATACCTTGATACCTTGAGTACCTTGCTACCTTGTGGTACCTTGTACCTTGGATCGGGTACCTTGAGGTAGCTACCTTGAGTACCTTGAACGATACCTTGCCTTACCTTGTTTACCTTGTACCTTGTACCTTGGTACCTTGAAGATTACCTTGATTACCTTGCTACTTTCGCTACCTTGCAAATACCTTGAGGTACTCGTACCTTGCTGCAAGATATACCTTGGCCCGGCTTACCTTGTGCCATGCTTTATACCTTGTGAGTACCTTGGAACTGAGCCTACCTTGTACCTTGCTACCTTGATCTTACCTTGTACCTTGCTATACCTTGGGGCGTACCTTGTACCTTGGGTTTACCTTGGAACCTACCTTGCGGGTACCTTGCATACCTTGATTACCTTGTACCTTGTCGAGTACCTTGTACCTTGGTACCTTGTACCTTGAATTACCTTGTACCTTGTACCTTGTACCTTGGGCCTACCTTGGTTTTTACCTTGAGGGATATTTACCTTGTACCTTGTACCTTGGTACCTTGTACCTTGTTGCTACCTTGTACCTTGCTACCTTGCAGTACCTTGTATTACCTTGATACCTTGCTACCTTGCTACCTTGCATCTCTACCTTGGGTACCTTGCTACCTTGTGATATACCTTGTACCTTGTACCTTGGCGTACCTTGAACGTACCTTGTCATACCTTGTTTACCTTGGAATACCTTGTACCTTGGGTACCTTGCTACCTTGGGGACGTCGCCGGGTCTTACCTTGGTATACCTTGTACCTTGTACCTTGAAGTACCTTGTACCTTGATTACCTTGGATACCTTGCTTACCTTGGTTCCACAATACCTTGGATACCTTGGTTCGTCTGCAACTTACCTTGAGTGTTCGAGCTACCTTGCTATGATACCTTGGTTACCTTGTACCTTGCGGTAATTGTACCTTGATACCTTGGTACCTTGATCATTACCTTGTACCTTGTTACCTTGTACCTTGGCTAATGTTACCTTGTACCTTGTACCTTGCTACCTTGACCGCATTACCTTGCCCTACCTTGTTACCTTGGTCTAATACCTTGTTGTACCTTGGGTTTCTTTCTACCTTGCTACCTTGTTACCTTGAGAATATACCTTGCAGGTACCTTGGCCGGTATACCTTGATTACCTTGCATACCTTGCCTACCTTGTACCTTGAGCCTACCTACCTTGTGTTTCTACCTTGCCTACCTTGTTACGTTACCTTGGGTACCTTGTTACCTTGTTACCTTGTAAATATACATACCTTGGTTTAGTACCTTGGTGCTACCTTGTACCTTGTATAGGTACCTTGTACCTTGTACCTTGTACCTTGGCTACCTTGATAAGCTTACCTTGGATACCTTGATGTACCTTGTACCTTGTACCTTGTATACCTTGGTATGAGATTACCTTGCTACCTTGTACCTTGTACCTTGTACCTTGCATACCTTGGAGGTACCTTGGAGAGAGATACCTTGACGGTTACCTTGTCTATTGACTACCTTGCATACCTTGAATACCTTGTACCTTGACTACCTTGCTGCGTACCTTGATAGTATACCTTGCTACCTTGCCGGTACCTTGTACCTTGAATAAGTACCTTGTACCTTGAAGATCATACCTTGTACCTTGTTACCTTGCCAAAATGCCTAGTACCTTGTACCTTGCTACCTTGGTACCTTGAACTTACCTTGGTACCTTGAGGTACCTTGGTACCTTGTTCCATCGCTACCTTGTTACCTTGTTACCTTGGTACCTTGTGAGGGTACCTTGCTGTTACCTTGTCTACCTTGAGTACCTTGGTACCTTGTCGCTGCCGTACCTTGGTCTACCTTGTACCTTGTACCTTGGTTTACCTTGGGCTACTAGTTGTGCGTACCTTGTACCTTGAATGAACAGGTTTATGTACCTTGTACCTTGTACCTTGTACCTTGTACCTTGATACCTTGCTTACCTTGTACCTTGTACCTTGTTATCCTACCTTGTACCTTGTTACCTTGTACCTTGTACCTTGACGGTACCTTGTACCTTGACTTGCTACCTTGTACCTTGCGTACCTTGGTACCTTGCCTACCTTGTAATGTCCACGTATACCTTGTTTACCTTGATGTACCTTGTACCTTGCTTACCTTGCAGGGGGCTACCTTGCAGAATACCTTGTACCTTGCTACCTTGTGATCTACCTTGTACCTTGGGTTACCTTGCAATCTACCTTGTGTACCTTGTACCTTGTTACCTTGGCTACCTTGTACCTTGGTACCTTGGTACCTTGGAAGGGTTTACCTTGTGCACAATACCTTGTACCTTGTTACCTTGTACCTTGCGAGTACCTTGACCATACCTTGGATAAGTTACCTTGTTTTCTACCTTGTACCTTGGAACGATACCTTGAGTACCTTGGACTACCTTGCTACCTTGCTTACCTTGTTTACCTTGAAGGTTATCCGATACTACCTTGGTACCTTGTACCTTGGATACCTTGTACCTTGTACCTTGTTCTCGCTTACCTTGTACCTTGCTACCTTGCTACCTTGTACCTTGATAGTTTACCTTGTACCTTGTACCTTGCGCTACCTTGTACCTTGTCCCAGGTAATGATCTACCTTGTGGATACCTTGGAGCTGTATTTACCTTGCAGGCCATACCTTGTCTACCTTGTACCTTGTCTACCTTGTACCTTGTACCTTGTACCTTGCTGTACTCAGTACCTTGCTTACCTTGATACCTTGCTACCTTGGGTACCTTGGTGTACCTTGACGCTACCTTGTTACCTTGGTACCTTGTTACCTTGATTACCTTGCCTACCTTGGTACCTTGGCTTACCTTGGCTGTTTACCTTGATCGGTAACCGTACCTTGTACCTTGTTACCTTGATACCTTGCATACCTTGGTTTACCTTGGTACCTTGATTATACCTTGTACCTTGTACCTTGAGTACCTTGTTACCTTGTGTACCTTGCTTACCTTGTTACCTTGCTACCTTGGCGCTACCTTGGAAAATACCTTGTACCTTGGGCATTTCATTATGTTACCTTGTGACTACCTTGTTACCTTGTACCTTGTATTTACCTTGAGCAGTACCTTGTACCTTGCCTACCTTGGCTACCTTGAATACCTTGCAGTACCTTGTGGTCTTACCTTGTGATGATACCTTGTACCTTGGATTACCTTGGTTCTACCTTGTACCTTGCTACCTTGTCCCTACCTTGCCCGCGATACCTTGGCTACCTTGACTGCGTACCTTGTACCTTGCGTACCTTGCTACCTTGGTACCTTGTACCTTGCCGCTGCTACCTTGTACCTTGCGCGTGACCTACCTTGATTTACCTTGTCTACCTTGCTACCTTGCTTACCTTGTTCTGTTACCTTGACACTACCTTGCATACCTTGATATACCTTGGTACCTTGATGTACCTTGAGCTACCTTGTTACCTTGTACCTTGAGTACCTTGTACCTTGTACCTTGTGTACCTTGTACCTTGGTACCTTGTACCTTGTGCCTATACCTTGTCTACCTTGATACCTTGGTAATACCTTGATACCTTGATTACCTTGTACCTTGGAGTACCTTGTCCCTACCTTGTACCTTGTACCTTGTACCTTGATTGATACCTTGGTACCTTGTACCTTGTACCTTGGTTACCTTGATAGTACCTTGATACCTTGGGAACCTAGTACCTTGTACCTTGGGTTTACCTTGGGACGAGCCATACCTTGTAGACTATACCTTGTTAAAGTACCTTGCCGCGTACCTTGTTGTGCTTATACCTTGGTATTACCTACCTTGTCGATACCTTGTACCTTGGATACCTTGATACCTTGCAGGTTACCTTGTGAGCTTCGTAGTCCCGCGGACTACCTTGTTTACCTTGTGTTCATTACCTTGATACCTTGGGTACCTTGATACCTTGCATGTACCTTGGGGTTACCTTGTACCTTGTCTACCTTGTACCTTGTAATCAATACCTTGTACCTTGTACCTTGTACCTTGCTACCTTGATACCTTGCCTTACCTTGTCTACCTTGTTTACCTTGGTCAGTACCTACCTTGCGGTGTTACCTTGTTACCTTGGCTACCTTGTATACCTTGTGACTTACCTTGCAGCGCGTTAGTCCTACCTTGGTACCTTGTCACGGAAGCCGACTACCTTGACTACCTTGGATACCTTGTACCTTGTACCTTGCGCTACCTTGTACCTTGCTACCTTGCGCTACCTTGAAATTACCTACCTTGGTACCTTGATACCTTGGTACCTTGTGTAGGTTACCTTGGTTACCTTGGGTGTTGTGGTTGCTACCTTGATACCTTGCACTTACCTTGCTACCTTGAGATACCTTGATGGTGTACCTTGTTACCTTGATATACCTTGATACCTTGGATGTACCTTGAGGATACCTTGGTACCTTGTACCTTGGAATTACCTTGGAGGTACCTTGCCTGTACCTTGTACCTTGTACCTTGGGCTGTTTACCTTGATACCTTGGTACCTTGACCTGGTACCTTGGGTACCTTGTACCTTGTTTCTTACCTTGTACCTTGTACCTTGTACCTTGGTACCTTGAATTACCTTGCCCTACCTTGATCGTACCTTGTACCTTGTCTACCTTGCCCTACCTTGGATTTGATCAGGATAAGGTACCTTGGGATACCTTGATTCCTACCTTGTTTGTCTTGTACCTTGCATACCTTGCTACCTTGTACCTTGCGGGTACCTTGGGCTATACCTTGCGTACCTTGCTACCTTGACTACCTTGGTTTACCTTGTGGCGTCACCTACCTTGCTACCTTGCCGCATCTACCTTGTACCTTGATACCTTGCTATTTACCTTGGTTACCTTGGAGGCCTTATACCTTGGTACCTTGTACCTTGGGCTTACCTTGTTACCTTGGCTTTACCTTGTACCTTGCTAATACCTTGTACCTTGGTACCTTGTCTTTACCTTGAAGTGCCTTATTACCTTGGTTACCTTGGACTGATTGTACCTTGTCCTCTTTTACCTTGTGGTACTCTACCTTGTCAAGACTACCTTGTCATACCTTGTACCTTGATGGTACCTTGATACCTTGTACCTTGCGTTACCTTGCGCCGTTACCTTGTACCTTGTACCTTGGTACCTTGATACCTTGTACCTTGGATACCTTGACTTACCTTGCCTCCTATACCTTGTACCTTGCGCTACCTTGTCATACCTTGTACCTTGT"
pattern = "TACCTTGTA"
obj1 = PatternMatching(text, pattern)
longest_pp = obj1.pre_process_pattern()
starting_indices = obj1.search_pattern_in_text()
str = ' '.join(str(x) for x in starting_indices)
print(str)

'''

This code is developed from the algorithm design described on https://en.wikipedia.org/wiki/Knuth%E2%80%93Morris%E2%80%93Pratt_algorithm#Description_of_pseudocode_for_the_search_algorithm

'''
